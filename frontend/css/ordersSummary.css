.main {
  max-width: 1100px;
  padding-left: 30px;
  padding-right: 30px;

  margin-top: 140px;
  margin-bottom: 100px;

  /* margin-left: auto;
     margin-right auto;
     Is a trick for centering an element horizontally
     without needing a container. */
  margin-left: auto;
  margin-right: auto;
}

.page-title {
  font-weight: 700;
  font-size: 22px;
  margin-bottom: 18px;
}

.checkout-grid {
  display: grid;
  /* Here, 1fr means the first column will take
     up the remaining space in the grid. */
  grid-template-columns: 1fr 350px;
  column-gap: 12px;

  /* Use align-items: start; to prevent the elements
     in the grid from stretching vertically. */
  align-items: start;
}

@media (max-width: 1000px) {
  .main {
    max-width: 500px;
  }

  .checkout-grid {
    grid-template-columns: 1fr;
  }
}


.container {
  max-width: 1000px;
  margin: auto;
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 20px;
}
h2 {
  margin-top: 0;
}
.summary {
  display: grid;
  justify-content: space-between;
  grid-template-columns: 1fr 1fr;
  column-gap: 12px;

  align-items: center;
}
.summary-text {
  margin-bottom: 30px;
  display: flex;
  flex-direction: column;
  gap: 20px;
}
.chart-container {
  width: 400px;
  height: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
}
table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 2px;
}
th, td {
  border: 1px solid #999;
  padding: 8px;
  text-align: center;
}
.button {
  margin: 20px auto;
  display: block;
  padding: 10px 20px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
.button:hover {
  background-color: #0056b3;
}